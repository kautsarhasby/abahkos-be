// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
    id Int @id @default(autoincrement())
    email String @unique
    name String
    gender Gender
    password String
    role Roles @default(user)
    resetPassword Boolean @default(false)
    otp Int?
    expiredAt DateTime? @db.Timestamptz()
    verified Boolean @default(false)
    boardingPlace BoardingPlace? @relation(fields: [boardingId], references: [id])
    boardingId Int?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Room {
    id Int @id @default(autoincrement())
    boardingPlace BoardingPlace @relation(fields: [boardingId],references: [id])
    boardingId Int
    roomUuid String @unique @default(uuid())
    roomNumber Int @unique
    floor Int
    status Status
    facilities String[]
    price Int
    description String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

}

model BoardingPlace {
    id Int @id @default(autoincrement())
    name String
    phoneNumber Int
    address String  
    facilities String[]
    status StatusBoardingPlace
    rooms Room[] 
    User User[]
}

enum Roles {
  user
  admin
}


enum StatusBoardingPlace {
  full
  available
}


enum Status {
  booked
  occupied
  available
}

enum Gender {
  pria
  wanita
}

